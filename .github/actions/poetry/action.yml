name: Setup poetry virtual environment
inputs:
  python_version:
    required: true
    type: string
  poetry_version:
    required: true
    type: string
    default: '1.8.2'
  poetry_included_groups:
    required: false
    type: string
  poetry_excluded_groups:
    required: false
    type: string

runs:
  using: "composite"
  steps:
  - name: Setup and Cache Python ${{ inputs.python_version }}
    uses: actions/setup-python@v5
    with:
      python-version: ${{ inputs.python_version }}
  # - name: Load cached Poetry installation
  #   id: cached-poetry
  #   uses: actions/cache@v4
  #   with:
  #     path: ~/.local
  #     key: poetry-${{ runner.os }}-${{ inputs.poetry_version }}
  - name: Install and configure Poetry
    # if: steps.cached-poetry.outputs.cache-hit != 'true'
    uses: snok/install-poetry@v1
    with:
      version: ${{ inputs.poetry_version }}
      virtualenvs-create: true
      virtualenvs-in-project: true
      installer-parallel: true
  - name: Load cached venv
    id: cached-venv
    uses: actions/cache@v4
    with:
      path: .venv
      key: venv-${{ runner.os }}-${{ inputs.python_version }}-${{ hashFiles('poetry.lock') }}
  - name: Create Virtual Environment
    shell: bash
    run: |
      echo "Included optional dependency groups ${{ inputs.poetry_included_groups }}" 
      echo "Excluded optional dependency groups ${{ inputs.poetry_excluded_groups }}"

      # --sync: Synchronize the environment with the locked packages and the specified groups.
      COMMON_OPTS="--sync"
      WITH_OPTS=
      WITHOUT_OPTS=

      if [ -n "${{ inputs.poetry_included_groups }}" ]; then
        WITH_OPTS="--with ${{ inputs.poetry_included_groups }}"
      fi
      if [ -n "${{ inputs.poetry_excluded_groups }}" ]; then
        WITHOUT_OPTS="--without ${{ inputs.poetry_excluded_groups }}"
      fi

      poetry install $COMMON_OPTS $WITH_OPTS $WITHOUT_OPTS

      source $(poetry env info --path)/bin/activate
      # Set the path for subsequent steps so that the environment is activated by default
      echo PATH=$PATH >> $GITHUB_ENV
